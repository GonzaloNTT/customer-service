openapi: 3.0.3
info:
  title: Customer Service API
  description: API para la gestión de clientes, no-clientes y consulta de productos asociados en el sistema bancario.
  version: 1.0.0
servers:
  - url: http://localhost:8081/api/v1
    description: Entorno local de desarrollo

tags:
  - name: Customers
    description: Operaciones CRUD para clientes
  - name: NonCustomers
    description: Gestión de no-clientes (Yanki, BootCoin)

paths:
  /customers:
    post:
      tags: [Customers]
      summary: Crear cliente personal o empresarial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateRequest'
      responses:
        '201':
          description: Cliente creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    get:
      tags: [Customers]
      summary: Listar todos los clientes
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [PERSONAL, BUSINESS]
          description: Filtrar por tipo de cliente
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'

  /customers/{id}:
    get:
      tags: [Customers]
      summary: Obtener detalles de un cliente por ID
      parameters:
        - $ref: '#/components/parameters/CustomerIdParam'
      responses:
        '200':
          description: Datos del cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        '404':
          description: Cliente no encontrado
    put:
      tags: [Customers]
      summary: Actualizar información de un cliente
      parameters:
        - $ref: '#/components/parameters/CustomerIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateRequest'
      responses:
        '200':
          description: Cliente actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
    delete:
      tags: [Customers]
      summary: Eliminar un cliente
      parameters:
        - $ref: '#/components/parameters/CustomerIdParam'
      responses:
        '204':
          description: Cliente eliminado correctamente

  /customers/{id}/products:
    get:
      tags: [Customers]
      summary: Consultar productos asociados a un cliente
      parameters:
        - $ref: '#/components/parameters/CustomerIdParam'
      responses:
        '200':
          description: Lista de productos asociados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductReference'
        '404':
          description: Cliente no encontrado

  /non-customers:
    post:
      tags: [NonCustomers]
      summary: Registrar un no-cliente (Yanki, BootCoin)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NonCustomerCreateRequest'
      responses:
        '201':
          description: No-cliente creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonCustomerResponse'

  /non-customers/{id}:
    get:
      tags: [NonCustomers]
      summary: Obtener datos de un no-cliente
      parameters:
        - $ref: '#/components/parameters/NonCustomerIdParam'
      responses:
        '200':
          description: Datos del no-cliente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NonCustomerResponse'
        '404':
          description: No-cliente no encontrado

components:
  parameters:
    CustomerIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Identificador único del cliente
    NonCustomerIdParam:
      name: id
      in: path
      required: true
      schema:
        type: string
      description: Identificador único del no-cliente

  schemas:
    CustomerCreateRequest:
      type: object
      required:
        - name
        - documentType
        - documentNumber
        - customerType
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        imei:
          type: string
        documentType:
          type: string
          enum: [DNI, CEX, PASSPORT]
        documentNumber:
          type: string
        customerType:
          type: string
          enum: [PERSONAL, BUSINESS]
        personalType:
          type: string
          enum: [STANDARD, VIP]
          description: Solo para tipo PERSONAL. VIP requiere tener tarjeta de crédito.
        businessType:
          type: string
          enum: [STANDARD, PYME]
          description: Solo para tipo BUSINESS. PYME requiere tener tarjeta de crédito para abrir cuenta corriente PYME.
    CustomerUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
    CustomerResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        documentType:
          type: string
        documentNumber:
          type: string
        customerType:
          type: string
        personalType:
          type: string
        businessType:
          type: string
        createdAt:
          type: string
          format: date-time

    ProductReference:
      type: object
      properties:
        productId:
          type: string
        productType:
          type: string
          enum: [BankAccount, CreditCard, CreditPersonal, CreditCorporate, BootCoinWallet]
        alias:
          type: string
        status:
          type: string
          enum: [ACTIVE, INACTIVE]

    NonCustomerCreateRequest:
      type: object
      required:
        - name
        - documentType
        - documentNumber
        - phone
        - email
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        documentType:
          type: string
          enum: [DNI, CEX, PASSPORT]
        documentNumber:
          type: string
        imei:
          type: string
          description: Requerido solo para Yanki
        productType:
          type: string
          enum: [YANKI, BOOTCOIN]
    NonCustomerResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        documentType:
          type: string
        documentNumber:
          type: string
        productType:
          type: string
        createdAt:
          type: string
          format: date-time
