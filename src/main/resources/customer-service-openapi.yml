openapi: 3.0.3
info:
  title: Customer Service API
  description: API REST para gestión de clientes naturales, jurídicos y no clientes.
  version: 1.0.0
  contact:
    name: Bootcamp Backend Team
    email: support@bootcamp.io

servers:
  - url: http://localhost:8080/api/v1
    description: Servidor local de desarrollo

paths:

  /cliente/natural:
    post:
      summary: Crear un cliente natural
      operationId: crearClienteNatural
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteNaturalRequest'
            example:
              id: "c123"
              usuario:
                documento:
                  tipoDocumento: DNI
                  numeroDocumento: "87654321"
                telefono:
                  numero: "+51999999999"
                  imei: "A1B2C3D4E5F6"
                email: "juan.perez@example.com"
              tipo: REGULAR
      responses:
        '201':
          description: Cliente natural creado exitosamente
        '400':
          description: Datos inválidos
    get:
      summary: Listar clientes naturales
      operationId: listarClientesNaturales
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [ NORMAL, VIP, REGULAR ]
          required: false
          description: Filtra por tipo de cliente natural (opcional)
      responses:
        '200':
          description: Lista de clientes naturales filtrados opcionalmente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClienteNaturalRequest'

  /cliente/natural/{id}:
    get:
      summary: Obtener cliente natural por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente natural encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteNaturalRequest'
        '404':
          description: Cliente natural no encontrado
    put:
      summary: Actualizar un cliente natural existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteNaturalRequest'
      responses:
        '200':
          description: Cliente natural actualizado
    delete:
      summary: Eliminar cliente natural por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cliente natural eliminado

  /cliente/juridico:
    post:
      summary: Crear cliente jurídico
      operationId: crearClienteJuridico
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteJuridicoRequest'
            example:
              representantes: ["rep1", "rep2"]
              tipo: "SOCIEDAD_ANONIMA"
      responses:
        '201':
          description: Cliente jurídico creado
        '400':
          description: Datos inválidos
    get:
      summary: Listar todos los clientes jurídicos
      operationId: listarClientesJuridicos
      responses:
        '200':
          description: Lista de clientes jurídicos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClienteJuridicoRequest'

  /cliente/juridico/{id}:
    get:
      summary: Obtener cliente jurídico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cliente jurídico encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteJuridicoRequest'
        '404':
          description: Cliente jurídico no encontrado
    put:
      summary: Actualizar cliente jurídico existente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteJuridicoRequest'
      responses:
        '200':
          description: Cliente jurídico actualizado
    delete:
      summary: Eliminar cliente jurídico por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Cliente jurídico eliminado

  /nocliente:
    post:
      summary: Crear un no cliente
      operationId: crearNoCliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoClienteRequest'
            example:
              id: "n123"
              usuario:
                documento:
                  tipoDocumento: DNI
                  numeroDocumento: "99999999"
                telefono:
                  numero: "+51911111111"
                  imei: "Z9Y8X7W6"
                email: "anonimo@example.com"
      responses:
        '201':
          description: No cliente creado
        '400':
          description: Datos inválidos
    get:
      summary: Listar todos los no clientes
      operationId: listarNoClientes
      responses:
        '200':
          description: Lista de no clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoClienteRequest'

  /nocliente/{id}:
    get:
      summary: Obtener no cliente por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: No cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoClienteRequest'
        '404':
          description: No cliente no encontrado
    put:
      summary: Actualizar no cliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoClienteRequest'
      responses:
        '200':
          description: No cliente actualizado
    delete:
      summary: Eliminar no cliente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No cliente eliminado

components:
  schemas:
    ClienteJuridicoRequest:
      type: object
      required: [id, representantes, tipo, nombreComercial]
      properties:
        id:
          type: string
          example: "j123"
        representantes:
          type: array
          items:
            type: string
          uniqueItems: true
        tipo:
          type: string
          example: "NORMAL"
        nombreComercial:
          type: string
          example: "Empresa XYZ"

    ClienteNaturalRequest:
      type: object
      required: [id, usuario, tipo]
      properties:
        id:
          type: string
          example: "c123"
        usuario:
          $ref: '#/components/schemas/DatosUsuario'
        tipo:
          type: string
          example: "REGULAR"

    NoClienteRequest:
      type: object
      required: [id, usuario]
      properties:
        id:
          type: string
          example: "n123"
        usuario:
          $ref: '#/components/schemas/DatosUsuario'

    DatosUsuario:
      type: object
      required: [documento, telefono, email]
      properties:
        documento:
          $ref: '#/components/schemas/Documento'
        telefono:
          $ref: '#/components/schemas/Telefono'
        email:
          type: string
          format: email
          example: "correo@example.com"

    Documento:
      type: object
      required: [tipoDocumento, numeroDocumento]
      properties:
        tipoDocumento:
          type: string
          example: "DNI"
        numeroDocumento:
          type: string
          example: "12345678"

    Telefono:
      type: object
      required: [numero, imei]
      properties:
        numero:
          type: string
          example: "+51987654321"
        imei:
          type: string
          example: "A1B2C3D4E5F6"
